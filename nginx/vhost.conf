server {
    listen 80 default;

#    gzip                  on;
#    gzip_http_version     1.0;
#    gzip_comp_level       5;
#    gzip_types            text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json;
#    gzip_proxied          any;
#    gzip_min_length       256;
#    gzip_vary             on;

    root                  /var/www/html/public;
    index                 index.php;

    server_name           enso.localhost;

    access_log            /var/log/nginx/enso_access.log;
    error_log             /var/log/nginx/enso_error.log;

    charset               utf-8;
    client_max_body_size  100M;

    location / {
        try_files         $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        fastcgi_read_timeout      300;
        fastcgi_split_path_info  ^(.+\.php)(/.+)$;
        fastcgi_param            SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass             php-fpm;
        fastcgi_index            index.php;
        include                  fastcgi_params;
    }
}


## PHP-FPM Server ##
upstream php-fpm {
    server php:9000;
}

map $http_upgrade $connection_upgrade {
    default   upgrade;
    ''        close;
}

server {
    listen 81 default;

    root                  /var/www/html/public;
    index                 index.php;

    server_name           enso.localhost;

    access_log            /var/log/nginx/enso_sw_access.log;
    error_log             /var/log/nginx/enso_sw_error.log;

    charset               utf-8;
    client_max_body_size  100M;


    # Enable if any php files must not be accessed
    location ~* \.php$
    {
        return 404;
    }

    location /
    {
        try_files $uri @swoole;
    }

    location @swoole
    {
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header SERVER_PORT $server_port;
        proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # @TODO: Enable using HTTPS/SSL
        # proxy_set_header HTTPS "on";

        if (!-e $request_filename)
        {
            proxy_pass http://php-sw:9999;
        }
    }
}

